Grammar

    0 $accept: progam $end

    1 progam: functions

    2 functions: %empty
    3          | function functions

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 functionIdent: FUNCTION IDENT

    6 beginparamIdent: BEGINPARAMS

    7 endparamIdent: ENDPARAMS

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: checkident commaIdent COLON INTEGER
   11            | checkident commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

   13 checkident: IDENT
   14           | error

   15 commaIdent: %empty
   16           | COMMA IDENT commaIdent

   17 statements: %empty
   18           | statement SEMICOLON statements

   19 statement: statement_var ASSIGN expression
   20          | ifclause statements ENDIF
   21          | ifclause statements ifelse statements ENDIF
   22          | whileexp BEGINLOOP statements ENDLOOP
   23          | dobegin statements endwhile bool_exp
   24          | foreachwhile statements ENDLOOP
   25          | READ rvars
   26          | WRITE wvars
   27          | CONTINUE
   28          | RETURN expression

   29 foreachwhile: FOREACH IDENT IN IDENT BEGINLOOP

   30 ifelse: ELSE

   31 whileexp: whilebegin bool_exp

   32 whilebegin: WHILE

   33 dobegin: DO BEGINLOOP

   34 endwhile: ENDLOOP WHILE

   35 statement_var: IDENT
   36              | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   37 ifclause: IF bool_exp THEN

   38 rvars: %empty
   39      | IDENT
   40      | IDENT COMMA rvars

   41 wvars: %empty
   42      | IDENT
   43      | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   44      | IDENT COMMA wvars

   45 var: IDENT
   46    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   47 bool_exp: relation_and_exp
   48         | relation_and_exp OR bool_exp

   49 relation_and_exp: relation_exp
   50                 | relation_exp AND relation_and_exp

   51 relation_exp: relation_exp_comp
   52             | TRUE
   53             | FALSE
   54             | L_PAREN bool_exp R_PAREN
   55             | NOT relation_exp_comp
   56             | NOT TRUE
   57             | NOT FALSE
   58             | NOT L_PAREN bool_exp R_PAREN

   59 relation_exp_comp: expression EQ expression
   60                  | expression NEQ expression
   61                  | expression LT expression
   62                  | expression GT expression
   63                  | expression LTE expression
   64                  | expression GTE expression

   65 expressions: %empty
   66            | expression
   67            | expression COMMA expressions

   68 expression: multiplicative_expression
   69           | multiplicative_expression ADD expression
   70           | multiplicative_expression SUB expression

   71 multiplicative_expression: term
   72                          | term MULT multiplicative_expression
   73                          | term DIV multiplicative_expression
   74                          | term MOD multiplicative_expression

   75 term: var
   76     | number
   77     | L_PAREN expression R_PAREN
   78     | SUB var
   79     | SUB NUMBER
   80     | SUB L_PAREN expression R_PAREN
   81     | IDENT L_PAREN expressions R_PAREN

   82 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 14
FUNCTION (258) 5
BEGINPARAMS (259) 6
ENDPARAMS (260) 7
BEGINLOCALS (261) 4
ENDLOCALS (262) 4
BEGINBODY (263) 4
ENDBODY (264) 4
INTEGER (265) 10 11 12
ARRAY (266) 11 12
OF (267) 11 12
IF (268) 37
THEN (269) 37
ENDIF (270) 20 21
ELSE (271) 30
WHILE (272) 32 34
DO (273) 33
FOREACH (274) 29
IN (275) 29
BEGINLOOP (276) 22 29 33
ENDLOOP (277) 22 24 34
CONTINUE (278) 27
READ (279) 25
WRITE (280) 26
TRUE (281) 52 56
FALSE (282) 53 57
RETURN (283) 28
SEMICOLON (284) 4 9 18
COLON (285) 10 11 12
COMMA (286) 16 40 44 67
L_PAREN (287) 54 58 77 80 81
R_PAREN (288) 54 58 77 80 81
L_SQUARE_BRACKET (289) 11 12 36 43 46
R_SQUARE_BRACKET (290) 11 12 36 43 46
IDENT (291) 5 13 16 29 35 36 39 40 42 43 44 45 46 81
NUMBER (292) 11 12 79 82
MULT (293) 72
DIV (294) 73
MOD (295) 74
ADD (296) 69
SUB (297) 12 70 78 79 80
LT (298) 61
LTE (299) 63
GT (300) 62
GTE (301) 64
EQ (302) 59
NEQ (303) 60
AND (304) 50
OR (305) 48
ASSIGN (306) 19
NOT (307) 55 56 57 58


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
progam (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
functionIdent (57)
    on left: 5, on right: 4
beginparamIdent (58)
    on left: 6, on right: 4
endparamIdent (59)
    on left: 7, on right: 4
declarations (60)
    on left: 8 9, on right: 4 9
declaration (61)
    on left: 10 11 12, on right: 9
checkident (62)
    on left: 13 14, on right: 10 11 12
commaIdent (63)
    on left: 15 16, on right: 10 11 12 16
statements (64)
    on left: 17 18, on right: 4 18 20 21 22 23 24
statement (65)
    on left: 19 20 21 22 23 24 25 26 27 28, on right: 18
foreachwhile (66)
    on left: 29, on right: 24
ifelse (67)
    on left: 30, on right: 21
whileexp (68)
    on left: 31, on right: 22
whilebegin (69)
    on left: 32, on right: 31
dobegin (70)
    on left: 33, on right: 23
endwhile (71)
    on left: 34, on right: 23
statement_var (72)
    on left: 35 36, on right: 19
ifclause (73)
    on left: 37, on right: 20 21
rvars (74)
    on left: 38 39 40, on right: 25 40
wvars (75)
    on left: 41 42 43 44, on right: 26 44
var (76)
    on left: 45 46, on right: 75 78
bool_exp (77)
    on left: 47 48, on right: 23 31 37 48 54 58
relation_and_exp (78)
    on left: 49 50, on right: 47 48 50
relation_exp (79)
    on left: 51 52 53 54 55 56 57 58, on right: 49 50
relation_exp_comp (80)
    on left: 59 60 61 62 63 64, on right: 51 55
expressions (81)
    on left: 65 66 67, on right: 67 81
expression (82)
    on left: 68 69 70, on right: 19 28 36 43 46 59 60 61 62 63 64 66
    67 69 70 77 80
multiplicative_expression (83)
    on left: 71 72 73 74, on right: 68 69 70 72 73 74
term (84)
    on left: 75 76 77 78 79 80 81, on right: 71 72 73 74
number (85)
    on left: 82, on right: 76


State 0

    0 $accept: . progam $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    progam         go to state 2
    functions      go to state 3
    function       go to state 4
    functionIdent  go to state 5


State 1

    5 functionIdent: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: progam . $end

    $end  shift, and go to state 7


State 3

    1 progam: functions .

    $default  reduce using rule 1 (progam)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions      go to state 8
    function       go to state 4
    functionIdent  go to state 5


State 5

    4 function: functionIdent . SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 9


State 6

    5 functionIdent: FUNCTION IDENT .

    $default  reduce using rule 5 (functionIdent)


State 7

    0 $accept: progam $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: functionIdent SEMICOLON . beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 10

    beginparamIdent  go to state 11


State 10

    6 beginparamIdent: BEGINPARAMS .

    $default  reduce using rule 6 (beginparamIdent)


State 11

    4 function: functionIdent SEMICOLON beginparamIdent . declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    ENDPARAMS  reduce using rule 8 (declarations)

    declarations  go to state 14
    declaration   go to state 15
    checkident    go to state 16


State 12

   14 checkident: error .

    $default  reduce using rule 14 (checkident)


State 13

   13 checkident: IDENT .

    $default  reduce using rule 13 (checkident)


State 14

    4 function: functionIdent SEMICOLON beginparamIdent declarations . endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 17

    endparamIdent  go to state 18


State 15

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 16

   10 declaration: checkident . commaIdent COLON INTEGER
   11            | checkident . commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident . commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 20

    $default  reduce using rule 15 (commaIdent)

    commaIdent  go to state 21


State 17

    7 endparamIdent: ENDPARAMS .

    $default  reduce using rule 7 (endparamIdent)


State 18

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    ENDPARAMS  reduce using rule 8 (declarations)
    ENDLOCALS  reduce using rule 8 (declarations)

    declarations  go to state 23
    declaration   go to state 15
    checkident    go to state 16


State 20

   16 commaIdent: COMMA . IDENT commaIdent

    IDENT  shift, and go to state 24


State 21

   10 declaration: checkident commaIdent . COLON INTEGER
   11            | checkident commaIdent . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident commaIdent . COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 25


State 22

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    ENDLOCALS  reduce using rule 8 (declarations)

    declarations  go to state 26
    declaration   go to state 15
    checkident    go to state 16


State 23

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 24

   16 commaIdent: COMMA IDENT . commaIdent

    COMMA  shift, and go to state 20

    $default  reduce using rule 15 (commaIdent)

    commaIdent  go to state 27


State 25

   10 declaration: checkident commaIdent COLON . INTEGER
   11            | checkident commaIdent COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident commaIdent COLON . ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 28
    ARRAY    shift, and go to state 29


State 26

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 30


State 27

   16 commaIdent: COMMA IDENT commaIdent .

    $default  reduce using rule 16 (commaIdent)


State 28

   10 declaration: checkident commaIdent COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 29

   11 declaration: checkident commaIdent COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident commaIdent COLON ARRAY . L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 31


State 30

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 32


State 31

   11 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | checkident commaIdent COLON ARRAY L_SQUARE_BRACKET . SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33
    SUB     shift, and go to state 34


State 32

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 44
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 33

   11 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 52


State 34

   12 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 53


State 35

   37 ifclause: IF . bool_exp THEN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 62
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 36

   32 whilebegin: WHILE .

    $default  reduce using rule 32 (whilebegin)


State 37

   33 dobegin: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 70


State 38

   29 foreachwhile: FOREACH . IDENT IN IDENT BEGINLOOP

    IDENT  shift, and go to state 71


State 39

   27 statement: CONTINUE .

    $default  reduce using rule 27 (statement)


State 40

   25 statement: READ . rvars

    IDENT  shift, and go to state 72

    $default  reduce using rule 38 (rvars)

    rvars  go to state 73


State 41

   26 statement: WRITE . wvars

    IDENT  shift, and go to state 74

    $default  reduce using rule 41 (wvars)

    wvars  go to state 75


State 42

   28 statement: RETURN . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 77
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 43

   35 statement_var: IDENT .
   36              | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 35 (statement_var)


State 44

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 79


State 45

   18 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 80


State 46

   24 statement: foreachwhile . statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 81
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 47

   22 statement: whileexp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 82


State 48

   31 whileexp: whilebegin . bool_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 83
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 49

   23 statement: dobegin . statements endwhile bool_exp

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 84
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 50

   19 statement: statement_var . ASSIGN expression

    ASSIGN  shift, and go to state 85


State 51

   20 statement: ifclause . statements ENDIF
   21          | ifclause . statements ifelse statements ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 86
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 52

   11 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 87


State 53

   12 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 88


State 54

   52 relation_exp: TRUE .

    $default  reduce using rule 52 (relation_exp)


State 55

   53 relation_exp: FALSE .

    $default  reduce using rule 53 (relation_exp)


State 56

   54 relation_exp: L_PAREN . bool_exp R_PAREN
   77 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 89
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 90
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 57

   45 var: IDENT .
   46    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81 term: IDENT . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 91
    L_SQUARE_BRACKET  shift, and go to state 92

    $default  reduce using rule 45 (var)


State 58

   82 number: NUMBER .

    $default  reduce using rule 82 (number)


State 59

   78 term: SUB . var
   79     | SUB . NUMBER
   80     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 93
    IDENT    shift, and go to state 94
    NUMBER   shift, and go to state 95

    var  go to state 96


State 60

   55 relation_exp: NOT . relation_exp_comp
   56             | NOT . TRUE
   57             | NOT . FALSE
   58             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 97
    FALSE    shift, and go to state 98
    L_PAREN  shift, and go to state 99
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    relation_exp_comp          go to state 100
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 61

   75 term: var .

    $default  reduce using rule 75 (term)


State 62

   37 ifclause: IF bool_exp . THEN

    THEN  shift, and go to state 101


State 63

   47 bool_exp: relation_and_exp .
   48         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 102

    $default  reduce using rule 47 (bool_exp)


State 64

   49 relation_and_exp: relation_exp .
   50                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 103

    $default  reduce using rule 49 (relation_and_exp)


State 65

   51 relation_exp: relation_exp_comp .

    $default  reduce using rule 51 (relation_exp)


State 66

   59 relation_exp_comp: expression . EQ expression
   60                  | expression . NEQ expression
   61                  | expression . LT expression
   62                  | expression . GT expression
   63                  | expression . LTE expression
   64                  | expression . GTE expression

    LT   shift, and go to state 104
    LTE  shift, and go to state 105
    GT   shift, and go to state 106
    GTE  shift, and go to state 107
    EQ   shift, and go to state 108
    NEQ  shift, and go to state 109


State 67

   68 expression: multiplicative_expression .
   69           | multiplicative_expression . ADD expression
   70           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 110
    SUB  shift, and go to state 111

    $default  reduce using rule 68 (expression)


State 68

   71 multiplicative_expression: term .
   72                          | term . MULT multiplicative_expression
   73                          | term . DIV multiplicative_expression
   74                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 112
    DIV   shift, and go to state 113
    MOD   shift, and go to state 114

    $default  reduce using rule 71 (multiplicative_expression)


State 69

   76 term: number .

    $default  reduce using rule 76 (term)


State 70

   33 dobegin: DO BEGINLOOP .

    $default  reduce using rule 33 (dobegin)


State 71

   29 foreachwhile: FOREACH IDENT . IN IDENT BEGINLOOP

    IN  shift, and go to state 115


State 72

   39 rvars: IDENT .
   40      | IDENT . COMMA rvars

    COMMA  shift, and go to state 116

    $default  reduce using rule 39 (rvars)


State 73

   25 statement: READ rvars .

    $default  reduce using rule 25 (statement)


State 74

   42 wvars: IDENT .
   43      | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   44      | IDENT . COMMA wvars

    COMMA             shift, and go to state 117
    L_SQUARE_BRACKET  shift, and go to state 118

    $default  reduce using rule 42 (wvars)


State 75

   26 statement: WRITE wvars .

    $default  reduce using rule 26 (statement)


State 76

   77 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 119
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 77

   28 statement: RETURN expression .

    $default  reduce using rule 28 (statement)


State 78

   36 statement_var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 120
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 79

    4 function: functionIdent SEMICOLON beginparamIdent declarations endparamIdent BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 80

   18 statements: statement SEMICOLON . statements

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 121
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 81

   24 statement: foreachwhile statements . ENDLOOP

    ENDLOOP  shift, and go to state 122


State 82

   22 statement: whileexp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 123
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 83

   31 whileexp: whilebegin bool_exp .

    $default  reduce using rule 31 (whileexp)


State 84

   23 statement: dobegin statements . endwhile bool_exp

    ENDLOOP  shift, and go to state 124

    endwhile  go to state 125


State 85

   19 statement: statement_var ASSIGN . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 126
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 86

   20 statement: ifclause statements . ENDIF
   21          | ifclause statements . ifelse statements ENDIF

    ENDIF  shift, and go to state 127
    ELSE   shift, and go to state 128

    ifelse  go to state 129


State 87

   11 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 130


State 88

   12 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 131


State 89

   54 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 132


State 90

   59 relation_exp_comp: expression . EQ expression
   60                  | expression . NEQ expression
   61                  | expression . LT expression
   62                  | expression . GT expression
   63                  | expression . LTE expression
   64                  | expression . GTE expression
   77 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 133
    LT       shift, and go to state 104
    LTE      shift, and go to state 105
    GT       shift, and go to state 106
    GTE      shift, and go to state 107
    EQ       shift, and go to state 108
    NEQ      shift, and go to state 109


State 91

   81 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    $default  reduce using rule 65 (expressions)

    var                        go to state 61
    expressions                go to state 134
    expression                 go to state 135
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 92

   46 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 136
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 93

   80 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 137
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 94

   45 var: IDENT .
   46    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 92

    $default  reduce using rule 45 (var)


State 95

   79 term: SUB NUMBER .

    $default  reduce using rule 79 (term)


State 96

   78 term: SUB var .

    $default  reduce using rule 78 (term)


State 97

   56 relation_exp: NOT TRUE .

    $default  reduce using rule 56 (relation_exp)


State 98

   57 relation_exp: NOT FALSE .

    $default  reduce using rule 57 (relation_exp)


State 99

   58 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   77 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 138
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 90
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 100

   55 relation_exp: NOT relation_exp_comp .

    $default  reduce using rule 55 (relation_exp)


State 101

   37 ifclause: IF bool_exp THEN .

    $default  reduce using rule 37 (ifclause)


State 102

   48 bool_exp: relation_and_exp OR . bool_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 139
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 103

   50 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    relation_and_exp           go to state 140
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 104

   61 relation_exp_comp: expression LT . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 141
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 105

   63 relation_exp_comp: expression LTE . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 142
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 106

   62 relation_exp_comp: expression GT . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 143
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 107

   64 relation_exp_comp: expression GTE . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 144
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 108

   59 relation_exp_comp: expression EQ . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 145
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 109

   60 relation_exp_comp: expression NEQ . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 146
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 110

   69 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 147
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 111

   70 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 148
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 112

   72 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    multiplicative_expression  go to state 149
    term                       go to state 68
    number                     go to state 69


State 113

   73 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    multiplicative_expression  go to state 150
    term                       go to state 68
    number                     go to state 69


State 114

   74 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    multiplicative_expression  go to state 151
    term                       go to state 68
    number                     go to state 69


State 115

   29 foreachwhile: FOREACH IDENT IN . IDENT BEGINLOOP

    IDENT  shift, and go to state 152


State 116

   40 rvars: IDENT COMMA . rvars

    IDENT  shift, and go to state 72

    $default  reduce using rule 38 (rvars)

    rvars  go to state 153


State 117

   44 wvars: IDENT COMMA . wvars

    IDENT  shift, and go to state 74

    $default  reduce using rule 41 (wvars)

    wvars  go to state 154


State 118

   43 wvars: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    var                        go to state 61
    expression                 go to state 155
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 119

   77 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 133


State 120

   36 statement_var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 156


State 121

   18 statements: statement SEMICOLON statements .

    $default  reduce using rule 18 (statements)


State 122

   24 statement: foreachwhile statements ENDLOOP .

    $default  reduce using rule 24 (statement)


State 123

   22 statement: whileexp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 157


State 124

   34 endwhile: ENDLOOP . WHILE

    WHILE  shift, and go to state 158


State 125

   23 statement: dobegin statements endwhile . bool_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59
    NOT      shift, and go to state 60

    var                        go to state 61
    bool_exp                   go to state 159
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    relation_exp_comp          go to state 65
    expression                 go to state 66
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 126

   19 statement: statement_var ASSIGN expression .

    $default  reduce using rule 19 (statement)


State 127

   20 statement: ifclause statements ENDIF .

    $default  reduce using rule 20 (statement)


State 128

   30 ifelse: ELSE .

    $default  reduce using rule 30 (ifelse)


State 129

   21 statement: ifclause statements ifelse . statements ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    FOREACH   shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 17 (statements)

    statements     go to state 160
    statement      go to state 45
    foreachwhile   go to state 46
    whileexp       go to state 47
    whilebegin     go to state 48
    dobegin        go to state 49
    statement_var  go to state 50
    ifclause       go to state 51


State 130

   11 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 131

   12 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 161


State 132

   54 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 54 (relation_exp)


State 133

   77 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (term)


State 134

   81 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 162


State 135

   66 expressions: expression .
   67            | expression . COMMA expressions

    COMMA  shift, and go to state 163

    $default  reduce using rule 66 (expressions)


State 136

   46 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 164


State 137

   80 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 165


State 138

   58 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 166


State 139

   48 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 48 (bool_exp)


State 140

   50 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 50 (relation_and_exp)


State 141

   61 relation_exp_comp: expression LT expression .

    $default  reduce using rule 61 (relation_exp_comp)


State 142

   63 relation_exp_comp: expression LTE expression .

    $default  reduce using rule 63 (relation_exp_comp)


State 143

   62 relation_exp_comp: expression GT expression .

    $default  reduce using rule 62 (relation_exp_comp)


State 144

   64 relation_exp_comp: expression GTE expression .

    $default  reduce using rule 64 (relation_exp_comp)


State 145

   59 relation_exp_comp: expression EQ expression .

    $default  reduce using rule 59 (relation_exp_comp)


State 146

   60 relation_exp_comp: expression NEQ expression .

    $default  reduce using rule 60 (relation_exp_comp)


State 147

   69 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 69 (expression)


State 148

   70 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 70 (expression)


State 149

   72 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 72 (multiplicative_expression)


State 150

   73 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 73 (multiplicative_expression)


State 151

   74 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 74 (multiplicative_expression)


State 152

   29 foreachwhile: FOREACH IDENT IN IDENT . BEGINLOOP

    BEGINLOOP  shift, and go to state 167


State 153

   40 rvars: IDENT COMMA rvars .

    $default  reduce using rule 40 (rvars)


State 154

   44 wvars: IDENT COMMA wvars .

    $default  reduce using rule 44 (wvars)


State 155

   43 wvars: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 168


State 156

   36 statement_var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 36 (statement_var)


State 157

   22 statement: whileexp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (statement)


State 158

   34 endwhile: ENDLOOP WHILE .

    $default  reduce using rule 34 (endwhile)


State 159

   23 statement: dobegin statements endwhile bool_exp .

    $default  reduce using rule 23 (statement)


State 160

   21 statement: ifclause statements ifelse statements . ENDIF

    ENDIF  shift, and go to state 169


State 161

   12 declaration: checkident commaIdent COLON ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 162

   81 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 81 (term)


State 163

   67 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    SUB      shift, and go to state 59

    $default  reduce using rule 65 (expressions)

    var                        go to state 61
    expressions                go to state 170
    expression                 go to state 135
    multiplicative_expression  go to state 67
    term                       go to state 68
    number                     go to state 69


State 164

   46 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 46 (var)


State 165

   80 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 80 (term)


State 166

   58 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 58 (relation_exp)


State 167

   29 foreachwhile: FOREACH IDENT IN IDENT BEGINLOOP .

    $default  reduce using rule 29 (foreachwhile)


State 168

   43 wvars: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 43 (wvars)


State 169

   21 statement: ifclause statements ifelse statements ENDIF .

    $default  reduce using rule 21 (statement)


State 170

   67 expressions: expression COMMA expressions .

    $default  reduce using rule 67 (expressions)
