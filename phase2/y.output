Grammar

    0 $accept: progam $end

    1 progam: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 vars: %empty
   25     | var
   26     | var COMMA vars

   27 var: ident
   28    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   29 bool_exp: relation_and_exp
   30         | relation_and_exp OR bool_exp

   31 relation_and_exp: relation_exp
   32                 | relation_exp AND relation_and_exp

   33 relation_exp: expression comp expression
   34             | TRUE
   35             | FALSE
   36             | L_PAREN bool_exp R_PAREN
   37             | NOT expression comp expression
   38             | NOT TRUE
   39             | NOT FALSE
   40             | NOT L_PAREN bool_exp R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expressions: %empty
   48            | expression
   49            | expression COMMA expressions

   50 expression: multiplicative_expression
   51           | multiplicative_expression ADD expression
   52           | multiplicative_expression SUB expression

   53 multiplicative_expression: term
   54                          | term MULT multiplicative_expression
   55                          | term DIV multiplicative_expression
   56                          | term MOD multiplicative_expression

   57 term: var
   58     | number
   59     | L_PAREN expression R_PAREN
   60     | SUB var
   61     | SUB NUMBER
   62     | SUB L_PAREN expression R_PAREN
   63     | ident L_PAREN expressions R_PAREN

   64 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGINPARAMS (259) 4
ENDPARAMS (260) 4
BEGINLOCALS (261) 4
ENDLOCALS (262) 4
BEGINBODY (263) 4
ENDBODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
OF (267) 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
DO (273) 18
FOREACH (274) 19
IN (275) 19
BEGINLOOP (276) 17 18 19
ENDLOOP (277) 17 18 19
CONTINUE (278) 22
READ (279) 20
WRITE (280) 21
AND (281) 32
OR (282) 30
NOT (283) 37 38 39 40
TRUE (284) 34 38
FALSE (285) 35 39
RETURN (286) 23
SUB (287) 52 60 61 62
ADD (288) 51
MULT (289) 54
DIV (290) 55
MOD (291) 56
EQ (292) 41
NEQ (293) 42
LT (294) 43
GT (295) 44
LTE (296) 45
GTE (297) 46
SEMICOLON (298) 4 6 13
COLON (299) 7 8
COMMA (300) 10 26 49
L_PAREN (301) 36 40 59 62 63
R_PAREN (302) 36 40 59 62 63
L_SQUARE_BRACKET (303) 8 28
R_SQUARE_BRACKET (304) 8 28
ASSIGN (305) 14
IDENT (306) 11
NUMBER (307) 8 61 64


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
progam (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8, on right: 6
identifiers (59)
    on left: 9 10, on right: 7 8 10
ident (60)
    on left: 11, on right: 4 9 10 19 27 28 63
statements (61)
    on left: 12 13, on right: 4 13 15 16 17 18 19
statement (62)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 13
vars (63)
    on left: 24 25 26, on right: 20 21 26
var (64)
    on left: 27 28, on right: 14 25 26 57 60
bool_exp (65)
    on left: 29 30, on right: 15 16 17 18 30 36 40
relation_and_exp (66)
    on left: 31 32, on right: 29 30 32
relation_exp (67)
    on left: 33 34 35 36 37 38 39 40, on right: 31 32
comp (68)
    on left: 41 42 43 44 45 46, on right: 33 37
expressions (69)
    on left: 47 48 49, on right: 49 63
expression (70)
    on left: 50 51 52, on right: 14 23 28 33 37 48 49 51 52 59 62
multiplicative_expression (71)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
term (72)
    on left: 57 58 59 60 61 62 63, on right: 53 54 55 56
number (73)
    on left: 64, on right: 58


State 0

    0 $accept: . progam $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    progam     go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: progam . $end

    $end  shift, and go to state 7


State 3

    1 progam: functions .

    $default  reduce using rule 1 (progam)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: progam $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 23
    ident        go to state 14


State 19

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 24

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 28


State 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 51
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 31

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 58
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 32

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 33

   19 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 60


State 34

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 5

    $default  reduce using rule 24 (vars)

    ident  go to state 38
    vars   go to state 61
    var    go to state 62


State 36

   21 statement: WRITE . vars

    IDENT  shift, and go to state 5

    $default  reduce using rule 24 (vars)

    ident  go to state 38
    vars   go to state 63
    var    go to state 62


State 37

   23 statement: RETURN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 65
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 38

   27 var: ident .
   28    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 27 (var)


State 39

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 67


State 40

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 68


State 41

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


State 43

   37 relation_exp: NOT . expression comp expression
   38             | NOT . TRUE
   39             | NOT . FALSE
   40             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 74
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 44

   34 relation_exp: TRUE .

    $default  reduce using rule 34 (relation_exp)


State 45

   35 relation_exp: FALSE .

    $default  reduce using rule 35 (relation_exp)


State 46

   60 term: SUB . var
   61     | SUB . NUMBER
   62     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 76

    ident  go to state 38
    var    go to state 77


State 47

   36 relation_exp: L_PAREN . bool_exp R_PAREN
   59 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 78
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 79
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 48

   64 number: NUMBER .

    $default  reduce using rule 64 (number)


State 49

   27 var: ident .
   28    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63 term: ident . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 27 (var)


State 50

   57 term: var .

    $default  reduce using rule 57 (term)


State 51

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 81


State 52

   29 bool_exp: relation_and_exp .
   30         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 82

    $default  reduce using rule 29 (bool_exp)


State 53

   31 relation_and_exp: relation_exp .
   32                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 83

    $default  reduce using rule 31 (relation_and_exp)


State 54

   33 relation_exp: expression . comp expression

    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 90


State 55

   50 expression: multiplicative_expression .
   51           | multiplicative_expression . ADD expression
   52           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 91
    ADD  shift, and go to state 92

    $default  reduce using rule 50 (expression)


State 56

   53 multiplicative_expression: term .
   54                          | term . MULT multiplicative_expression
   55                          | term . DIV multiplicative_expression
   56                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 53 (multiplicative_expression)


State 57

   58 term: number .

    $default  reduce using rule 58 (term)


State 58

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 59

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 97
    statement   go to state 40
    var         go to state 41


State 60

   19 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 98


State 61

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 62

   25 vars: var .
   26     | var . COMMA vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 25 (vars)


State 63

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 64

   59 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 100
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 65

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 66

   28 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 101
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 67

    4 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 68

   13 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 102
    statement   go to state 40
    var         go to state 41


State 69

   14 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 103
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 70

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 71

   38 relation_exp: NOT TRUE .

    $default  reduce using rule 38 (relation_exp)


State 72

   39 relation_exp: NOT FALSE .

    $default  reduce using rule 39 (relation_exp)


State 73

   40 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   59 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 104
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 79
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 74

   37 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 105


State 75

   62 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 106
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 76

   61 term: SUB NUMBER .

    $default  reduce using rule 61 (term)


State 77

   60 term: SUB var .

    $default  reduce using rule 60 (term)


State 78

   36 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 107


State 79

   33 relation_exp: expression . comp expression
   59 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85
    LT       shift, and go to state 86
    GT       shift, and go to state 87
    LTE      shift, and go to state 88
    GTE      shift, and go to state 89
    R_PAREN  shift, and go to state 108

    comp  go to state 90


State 80

   63 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    $default  reduce using rule 47 (expressions)

    ident                      go to state 49
    var                        go to state 50
    expressions                go to state 109
    expression                 go to state 110
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 81

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 111
    statement   go to state 40
    var         go to state 41


State 82

   30 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 112
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 83

   32 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    relation_and_exp           go to state 113
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 84

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 85

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 86

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 87

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 88

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 89

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 90

   33 relation_exp: expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 114
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 91

   52 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 115
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 92

   51 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 116
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 93

   54 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    multiplicative_expression  go to state 117
    term                       go to state 56
    number                     go to state 57


State 94

   55 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    multiplicative_expression  go to state 118
    term                       go to state 56
    number                     go to state 57


State 95

   56 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    multiplicative_expression  go to state 119
    term                       go to state 56
    number                     go to state 57


State 96

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 120
    statement   go to state 40
    var         go to state 41


State 97

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 121


State 98

   19 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 122


State 99

   26 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    $default  reduce using rule 24 (vars)

    ident  go to state 38
    vars   go to state 123
    var    go to state 62


State 100

   59 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 101

   28 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 102

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 103

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 104

   40 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 125


State 105

   37 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    expression                 go to state 126
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 106

   62 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 127


State 107

   36 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 36 (relation_exp)


State 108

   59 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 109

   63 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 128


State 110

   48 expressions: expression .
   49            | expression . COMMA expressions

    COMMA  shift, and go to state 129

    $default  reduce using rule 48 (expressions)


State 111

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 130
    ELSE   shift, and go to state 131


State 112

   30 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 30 (bool_exp)


State 113

   32 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 32 (relation_and_exp)


State 114

   33 relation_exp: expression comp expression .

    $default  reduce using rule 33 (relation_exp)


State 115

   52 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 52 (expression)


State 116

   51 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 51 (expression)


State 117

   54 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 118

   55 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 119

   56 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 120

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 132


State 121

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 133


State 122

   19 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 134


State 123

   26 vars: var COMMA vars .

    $default  reduce using rule 26 (vars)


State 124

   28 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 28 (var)


State 125

   40 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 40 (relation_exp)


State 126

   37 relation_exp: NOT expression comp expression .

    $default  reduce using rule 37 (relation_exp)


State 127

   62 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 128

   63 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 63 (term)


State 129

   49 expressions: expression COMMA . expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    $default  reduce using rule 47 (expressions)

    ident                      go to state 49
    var                        go to state 50
    expressions                go to state 135
    expression                 go to state 110
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 130

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 131

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 136
    statement   go to state 40
    var         go to state 41


State 132

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 133

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    var                        go to state 50
    bool_exp                   go to state 137
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    number                     go to state 57


State 134

   19 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 138
    statement   go to state 40
    var         go to state 41


State 135

   49 expressions: expression COMMA expressions .

    $default  reduce using rule 49 (expressions)


State 136

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 139


State 137

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 138

   19 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 139

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)


State 140

   19 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)
